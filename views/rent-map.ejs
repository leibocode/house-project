<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>寻屋地图</title>
    <meta name="description" content="方便快捷寻屋"/>
    <meta name="kwywords" content="寻屋"/>

    <link href="/css/main.css" rel='stylesheet' type='text/css'/>
    <link href="/lib/layui/layui.css" rel="stylesheet" type="text/css"/>
    <link href="/css/rent-map.css" rel="stylesheet" type="text/css"/>
    <link rel="stylesheet" href="http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css" />
</head>
<body>
    <% include common/header.ejs %>
    <div class="left-region">
            <input id="cityEnName" th:value="${city.enName}" type="hidden">
            <input id="cityCnName" th:value="${city.cnName}" hidden="hidden">
            <div class="r-hd2">
                <ol class="order-select">
                    <li class="s-default on" data-bind="lastUpdateTime" data-direction="desc">默认</li>
                    <li class="s-price s-asc" data-bind="price" data-direction="asc">租金低
                        <i class="asc">↑</i>
                    </li>
                    <li class="s-area s-asc" data-bind="area" data-direction="desc">面积大
                        <i class="asc">↓</i></li>
                    <li class="s-new" data-bind="createTime" data-direction="desc">最新</li>
                </ol>
            </div>
            <div class="r-hd3" style="display: block;">
                <div class="r-hd3-content">
                    <ol class="i-card i-card-1">
                        <li class="i-card-name" th:text="${city.CnName}">北京市</li>
                        <li class=""><span th:text="${total}">0</span>套正在出租</li>
                        <li>共<span th:text="${#lists.size(regions)}"></span>个区域</li>
                    </ol>
                </div>
                <div class="r-hd3-bg">
                    <div class="r-hd3-cycle">
                        <div></div>
                    </div>
                    <div class="r-hd3-triangle"></div>
                </div>
            </div>
            <div class="r-container" style="position: relative; overflow: auto;">
                <ul id="house-flow" class="flow-default r-content">
                
                </ul>
            </div>
        </div>
        <div id="allmap" class="wrapper">
        </div>
    </div>
    <% include common/footer.ejs%>
    <script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=Oi2uijgpb8tILz7Ys9Q48KbmmfHDSpjK"></script>
    <script type="text/javascript" src="/js/baidu-map/TextIconOverlay.js"></script>
    <script type="text/javascript" src="/js/baidu-map/MarkerClusterer.js"></script>
    <script type="text/javascript" src="http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js"></script>
    <script type="text/javascript" src="/lib/jquery/1.9.1/jquery.min.js"></script>
    <script type="text/javascript" src="/lib/layui/layui.js"></script>
    <!-- <script type="text/javascript" src="/js/rent-map.js"></script> -->
    <script type="text/javascript">
        $(function(){
            alert('123')
            var city = '北京'
            var regions =[

            ]
            load()
        })
       //初始化地图数据
        var regionCountMap ={},
           labels =[],//标签管理
           params ={
               orderBy:'lastUpdateTime',
               orderDirection:'desc'
           },
           customLayer;//麻点图
        
        
        function load(city,regions,aggDate){
            //百度地图API功能
            //创建实例,设置地图 设置地图显示最大级别为城市
            var map = new BMap.Map('allmap',{minZoom:12})
            //城市中心
            //var print = new BMap.Point(city.baiduMapLongitude,city.baiduMapLatitude)
            var point = new BMap.Point(116.404185,39.915574)
            //初始化地图,设置中心点坐标及地图级别
            map.centerAndZoom(point,12)

            map.addControl(new BMap.NavigationControl({enableGeolocation: true})); // 添加比例尺控件
            map.addControl(new BMap.ScaleControl({anchor: BMAP_ANCHOR_TOP_LEFT})); // 左上角
            map.enableScrollWheelZoom(true); // 开启鼠标滚轮缩放

            // for(var i =0;i<aggDate.length;i++){
            //     regionCountMap[aggDate[i].key] = aggDate[i].count
            // }



        }

        /*
          刻画地区
          @param map
          @param regionList
        */
        function drawRegion(map,regionList){
            var boundary = new BMap.Boundary()
            var polygonContext = {}
            var regionPoint
            var textLabel
            for(var i =0;i<regionList.length;i++){
                regionPoint = new BMap.Point(regionList[i].baiduMapLongitude
                ,regionList[i].baiduMapLatitude)

                var houseCount = 0
                if(regionList[i].en_name in regionCountMap){
                    houseCount = regionCountMap[regionList[i].en_name]

                    var textContent = '<p style="margin-top:20px;pointer-events:none"></p>'+
                    regionList[i].cn_name+'<p style="pointer-events: none">'+
                        houseCount+'套</p>';
                    textLabel = new BMap.Label(textContent,{
                        position:regionPoint,//位置
                        offset:new BMap.size(-40,20) //文本偏移量
                    })

                    textLabel.setStyle({
                        height: '78px',
                        width: '78px',
                        color: '#fff',
                        backgroundColor: '#0054a5',
                        border: '0px solid rgb(255, 0, 0)',
                        borderRadius: "50%",
                        fontWeight: 'bold',
                        display: 'inline',
                        lineHeight: 'normal',
                        textAlign: 'center',
                        opacity: '0.8',
                        zIndex: 2,
                        overflow: 'hidden'
                    });

                    map.addOverlay(textLabel); // 将标签画在地图上

                    //记录行政地区覆盖物
                    polygonContext[textContent] =[]
                    (function(){
                        boundary.get(city.cn_name,)
                    })(textContent)
                }
            }
        }
    </script>
</body>
</html>